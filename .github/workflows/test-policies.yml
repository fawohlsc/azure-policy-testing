name: test-policies
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "policies/**"
      - "tests/**"
  workflow_dispatch:
    inputs:
      remarks:
        description: "Reason for triggering the workflow run"
        required: false
        default: "Testing Azure Policies..."
jobs:
  test-policies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache PowerShell modules
        id: cache-psmodules
        uses: actions/cache@v2
        with:
          path: /home/runner/.local/share/powershell/Modules/
          key: ${{runner.os}}-psmodules-${{hashFiles('./psmodules.json')}}
      - name: Install PowerShell modules
        if: steps.cache-psmodules.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Get-Content -Path ./psmodules.json | ConvertFrom-Json | ForEach-Object {
            Install-Module -Name $_.Name -RequiredVersion $_.RequiredVersion -Force -Scope CurrentUser -ErrorAction Stop  
          }
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["**/*.json"]'
        env:
          AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true
      - name: Create or update Azure Policies
        uses: azure/manage-azure-policy@v0
        with:
          paths: policies/**
          assignments: assign.test.json
      # Logout/Login to Azure to ensure that the latest policies are applied
      - name: Logout of Azure
        shell: pwsh
        run: Disconnect-AzAccount
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true
      - name: Test Azure Policies
        shell: pwsh
        run: |
          Invoke-Pester -Output Detailed -CI
